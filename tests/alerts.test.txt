import { chromium, expect, test } from "@playwright/test";

test("handling alert 1", async ({ page }) => {
  await page.goto(
    "https://www.lambdatest.com/selenium-playground/javascript-alert-box-demo"
  );

  page.on("dialog", async (alert) => {
    const text = alert.message();
    console.log(text);
    await alert.accept();
  });
  await page.waitForTimeout(5000);
  await page.getByText("Click Me").nth(0).click();
  await page.waitForTimeout(5000);
});

test("handling alert 2", async ({ page }) => {
  await page.goto(
    "https://www.lambdatest.com/selenium-playground/javascript-alert-box-demo"
  );

  page.on("dialog", async (alert) => {
    const text = alert.message();
    console.log(text);
    await alert.dismiss();
  });
  await page.waitForTimeout(5000);
  await page.getByText("Click Me").nth(1).click();
  expect(page.locator("id=confirm-demo")).toContainText("Cancel!");
  await page.waitForTimeout(5000);
});

test("handling alert 3", async ({ page }) => {
  await page.goto(
    "https://www.lambdatest.com/selenium-playground/javascript-alert-box-demo"
  );

  page.on("dialog", async (alert) => {
    const text = alert.defaultValue();
    console.log(text);
    await alert.accept("Alin!!!");
  });
  await page.waitForTimeout(5000);
  await page.getByText("Click Me").nth(2).click();
  await page.waitForTimeout(3000);

  expect(page.locator("//p[@id='prompt-demo']")).toContainText("Alin");
  await page.waitForTimeout(5000);
});

test("handling modal ", async ({ page }) => {
  await page.goto(
    "https://www.lambdatest.com/selenium-playground/bootstrap-modal-demo"
  );
  await page.locator("//button[@data-target='#myModal']").click();
  await page.waitForTimeout(3000);
  await page.click(
    "//div[@id='myModal']//button[@type='button'][normalize-space()='Save Changes']"
  );
  await page.waitForTimeout(5000);

  await page.click("button[data-target='#myMultiModal']");
  await page.click("button[data-target='#mySecondModal']");
  expect(page.locator("//h4[text()='Modal 2']")).toContainText("Modal 2");
  expect(
    page.locator(
      "div[id='mySecondModal'] div[class='modal-footer'] button:nth-child(1)"
    )
  ).toBeVisible;
  await page
    .locator(
      "div[id='mySecondModal'] div[class='modal-footer'] button:nth-child(1)"
    )
    .click();
  expect(
    page.locator(
      "(//button[@data-dismiss='modal']/following-sibling::button)[2]"
    )
  ).toBeVisible;
  await page.click("(//button[text()='Close'])[2]");
});
